# Experfolio MongoDB 하이브리드 포트폴리오 관리 Use Case

## 1. MongoDB 기반 포트폴리오 생성 및 관리 Use Case

### 1.1 포트폴리오 Document 생성
**Actor**: 구직자(JOB_SEEKER)
**Goal**: MongoDB에 유연한 스키마로 포트폴리오 문서 생성

**Pre-condition**:
- 사용자가 JOB_SEEKER 역할로 PostgreSQL에 로그인됨
- 사용자가 ACTIVE 상태임
- MongoDB 연결이 활성화됨

**Main Flow**:
1. 구직자가 포트폴리오 관리 페이지에 접근
2. 포트폴리오 기본 정보 입력
   - 포트폴리오 제목 (필수)
   - 자기소개 요약 (필수, 500자 이내)
   - 포트폴리오 공개/비공개 설정
   - 완성도 상태 (DRAFT, COMPLETED)
3. 시스템이 입력 데이터 유효성 검증
4. MongoDB Portfolio Document 생성
5. 텍스트 검색용 인덱스 자동 생성
6. RAG 벡터 임베딩 생성 및 저장
7. 포트폴리오 ObjectId 생성 및 PostgreSQL User와 연결

**Post-condition**:
- MongoDB에 Portfolio Document 생성됨
- 임베디드 문서 구조로 확장 가능한 상태
- 검색 인덱스 및 벡터 인덱스 활성화
- PostgreSQL User 테이블과 연결됨

**Exception Flow**:
- E1: MongoDB 연결 실패 → "데이터베이스 연결 오류" 메시지
- E2: Document 생성 실패 → "포트폴리오 생성에 실패했습니다" 메시지
- E3: 벡터 인덱싱 실패 → "검색 최적화에 실패했지만 포트폴리오는 저장됨" 경고

### 1.2 MongoDB Document 전체 조회 및 수정
**Actor**: 구직자(JOB_SEEKER)
**Goal**: MongoDB에 저장된 Portfolio Document 전체 조회 및 수정

**Main Flow**:
1. 구직자가 "내 포트폴리오" 페이지 접근
2. MongoDB로부터 Portfolio Document 전체 조회
   - 기본 정보 (제목, 자기소개)
   - personalInfo 임베디드 문서
   - educations 배열 (Education 문서들)
   - experiences 배열 (Experience 문서들)
   - techStacks 배열 (TechStack 문서들)
   - certifications 배열 (Certification 문서들)
   - projects 배열 (Project 문서들)
   - vectorEmbedding 필드 (AI 벡터 데이터)
   - searchMetadata 필드 (검색 최적화 데이터)
3. 유연한 스키마로 동적 필드 수정 가능
4. MongoDB Aggregation을 통한 진행률 계산
5. Document 업데이트 시 updatedAt 자동 갱신

**Post-condition**:
- MongoDB Document의 유연한 구조 활용
- 실시간 검색 인덱스 업데이트
- 벡터 임베딩 자동 재생성

## 2. MongoDB 임베디드 개인정보 관리 Use Case

### 2.1 PersonalInfo 임베디드 문서 관리
**Actor**: 구직자(JOB_SEEKER)
**Goal**: Portfolio Document 내 personalInfo 임베디드 문서 관리

**Main Flow**:
1. 포트폴리오 MongoDB Document 내 personalInfo 섹션 접근
2. personalInfo 임베디드 문서 입력/수정
   - name (필수, PostgreSQL User 테이블과 동기화)
   - email (필수, PostgreSQL User 테이블과 동기화)
   - phone (필수, PostgreSQL User 테이블과 동기화)
   - birthDate (필수)
   - gender (선택: MALE, FEMALE, OTHER)
   - address 임베디드 문서
     - city (필수)
     - district (필수)
     - fullAddress (선택)
     - zipCode (선택)
   - profileImageUrl (선택, MongoDB GridFS 또는 외부 저장소)
3. MongoDB Document 유효성 검증
4. 개인정보 필드 레벨 암호화 (필요 시)
5. 검색 메타데이터 업데이트 (searchMetadata.location 필드)
6. MongoDB Text Search 인덱스 자동 업데이트

**Post-condition**:
- MongoDB Document에 personalInfo 임베디드 문서 저장
- PostgreSQL User 테이블과 동기화 유지
- 지역 기반 MongoDB Aggregation 검색 가능
- 텍스트 검색 인덱스 업데이트

**Exception Flow**:
- E1: MongoDB Document 업데이트 실패 → "개인정보 업데이트에 실패했습니다"
- E2: PostgreSQL 동기화 실패 → "사용자 정보 동기화 오류"
- E3: 검색 인덱스 업데이트 실패 → "검색 최적화 오류 (데이터는 저장됨)"

## 3. MongoDB 배열 학력정보 관리 Use Case

### 3.1 educations 배열에 Education 문서 추가
**Actor**: 구직자(JOB_SEEKER)
**Goal**: Portfolio Document의 educations 배열에 새 Education 문서 추가

**Main Flow**:
1. Portfolio Document의 educations 배열 섹션 접규
2. 새 Education 임베디드 문서 추가
3. Education 문서 필드 입력
   - institution (학교명, 필수)
   - degree (학위: HIGH_SCHOOL, BACHELOR, MASTER, DOCTORATE, OTHER)
   - major (전공, 대학 이상 필수)
   - submajor (부전공, 선택)
   - location 임베디드 문서
     - city (시/도)
     - district (구/군)
   - startDate (ISODate 형식)
   - endDate (ISODate 형식 또는 null)
   - status (GRADUATED, EXPECTED, IN_PROGRESS, DROPPED)
   - gpa (성적, 선택)
   - maxGpa (만점, 선택)
4. MongoDB Document Validation
5. educations 배열에 새 Education 문서 push
6. 전공 기반 searchMetadata.keywords 업데이트
7. 텍스트 검색 인덱스 자동 업데이트

**Post-condition**:
- educations 배열에 Education 문서 추가됨
- startDate 기준 시계열 정렬
- 전공 기반 MongoDB 텍스트 검색 가능
- 학력 정보 Aggregation 파이프라인 검색 가능

**Exception Flow**:
- E1: 날짜 순서 오류 → "졸업일은 입학일보다 이후여야 합니다"
- E2: 성적 범위 초과 → "성적 범위를 확인해주세요"

### 3.2 학력정보 수정 및 삭제
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 기존 학력정보 수정 또는 삭제

**Main Flow**:
1. 학력정보 목록에서 특정 학력 선택
2. 수정 또는 삭제 선택
3. **수정 시**: 기존 데이터 불러와서 수정 폼 제공
4. **삭제 시**: 삭제 확인 다이얼로그 표시
5. 변경사항 저장 및 RAG 키워드 업데이트

**Exception Flow**:
- E1: 삭제 확인 취소 → 원래 상태 유지
- E2: 수정 중 유효성 오류 → 오류 메시지 표시

## 4. 경력정보 관리 Use Case

### 4.1 경력/프로젝트 경험 추가
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 인턴십, 프로젝트, 아르바이트 등 경력사항 관리

**Main Flow**:
1. 포트폴리오 내 경력정보 섹션 접근
2. 새 경력정보 추가
3. 경력정보 입력
   - 경력 유형 (INTERNSHIP, PROJECT, PART_TIME, VOLUNTEER, FREELANCE, OTHER)
   - 회사/기관명 (필수)
   - 부서/팀명 (선택)
   - 직책/역할 (필수)
   - 근무 기간
     - 시작일 (필수)
     - 종료일 (현재 진행 중인 경우 체크박스)
   - 주요 업무 및 성과 (필수, 1000자 이내)
   - 사용 기술스택 (선택, 다중 선택)
   - 프로젝트 URL (선택)
   - 성과 지표 (선택: 매출 증가, 효율성 개선 등)
4. 경력정보 유효성 검증
5. 경력정보 저장 및 기술스택 연동

**Post-condition**:
- 경력정보가 최신순으로 정렬되어 저장
- 기술스택과 자동 연동
- 경력 기반 RAG 검색 최적화

**Exception Flow**:
- E1: 기간 설정 오류 → "종료일은 시작일 이후여야 합니다"
- E2: 업무 내용 글자 수 초과 → "1000자 이내로 입력해주세요"

### 4.2 프로젝트 상세 관리
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 개인/팀 프로젝트 상세 정보 관리

**Main Flow**:
1. 경력 유형을 PROJECT로 선택
2. 프로젝트 상세 정보 입력
   - 프로젝트명 (필수)
   - 프로젝트 유형 (PERSONAL, TEAM, ACADEMIC, COMPANY)
   - 팀 규모 (인원 수)
   - 담당 역할 (필수)
   - 기술 스택 (필수, 다중 선택)
   - 프로젝트 설명 (필수, 2000자 이내)
   - GitHub/포트폴리오 링크 (선택)
   - 시연 영상 링크 (선택)
   - 주요 성과 및 배운점 (필수, 1000자 이내)
3. 프로젝트 이미지 업로드 (선택, 최대 5개)
4. 프로젝트 정보 저장

**Post-condition**:
- 프로젝트가 포트폴리오 하이라이트로 활용 가능
- 기술스택 기반 매칭 정확도 향상

## 5. 기술스택 관리 Use Case

### 5.1 기술스택 추가 및 숙련도 관리
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 보유 기술 및 숙련도 수준 관리

**Main Flow**:
1. 포트폴리오 내 기술스택 섹션 접근
2. 기술 카테고리별 관리
   - Programming Languages (Java, Python, JavaScript 등)
   - Frameworks/Libraries (Spring, React, Django 등)
   - Databases (MySQL, PostgreSQL, MongoDB 등)
   - DevOps/Tools (Docker, AWS, Git 등)
   - Design/Others (Figma, Photoshop 등)
3. 각 기술별 정보 입력
   - 기술명 (자동완성 제공)
   - 숙련도 (BEGINNER, INTERMEDIATE, ADVANCED, EXPERT)
   - 사용 경험 (개월 수)
   - 관련 프로젝트/경력 연동 (선택)
   - 자격증 연동 (선택)
4. 기술스택 우선순위 설정 (드래그 앤 드롭)
5. 기술스택 저장 및 RAG 키워드 업데이트

**Post-condition**:
- 기술스택이 숙련도별로 정렬되어 표시
- 채용담당자 기술 검색 시 매칭 가능

**Exception Flow**:
- E1: 중복 기술 추가 → "이미 추가된 기술입니다"
- E2: 사용 경험 범위 오류 → "0-240개월 사이로 입력해주세요"

### 5.2 기술스택 자동 추천
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 경력 및 프로젝트 기반 기술스택 자동 추천

**Main Flow**:
1. 경력/프로젝트 정보 분석
2. 언급된 기술 키워드 추출
3. 미등록 기술스택 추천 목록 생성
4. 사용자에게 추천 기술스택 표시
5. 원클릭으로 기술스택 추가 가능

**Post-condition**:
- 누락된 기술스택 보완 가능
- 포트폴리오 완성도 향상

## 6. 자격증 관리 Use Case

### 6.1 자격증 정보 추가
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 보유 자격증 정보 등록 및 관리

**Main Flow**:
1. 포트폴리오 내 자격증 섹션 접근
2. 새 자격증 추가
3. 자격증 정보 입력
   - 자격증 분류 (IT, LANGUAGE, BUSINESS, FINANCE, OTHER)
   - 자격증명 (필수, 자동완성 제공)
   - 발급기관 (필수)
   - 취득일 (필수)
   - 유효기간 (선택, 무제한 체크박스)
   - 점수/등급 (선택)
   - 자격증 번호 (선택)
   - 자격증 스캔 이미지 (선택)
4. 자격증 유효성 검증
   - 취득일 유효성
   - 유효기간 논리성 검증
5. 자격증 정보 저장
6. 관련 기술스택 자동 연동

**Post-condition**:
- 자격증이 취득일순으로 정렬되어 저장
- 기술 역량 증명 자료로 활용

**Exception Flow**:
- E1: 잘못된 취득일 → "올바른 취득일을 입력해주세요"
- E2: 유효기간 오류 → "유효기간은 취득일 이후여야 합니다"

### 6.2 자격증 갱신 알림
**Actor**: 시스템
**Goal**: 자격증 유효기간 만료 전 알림 제공

**Main Flow**:
1. 매일 자격증 유효기간 확인
2. 만료 30일, 7일 전 알림 발송
3. 갱신 완료 시 정보 업데이트
4. 만료된 자격증 상태 변경

## 7. 파일 업로드 및 OCR 처리 Use Case

### 7.1 포트폴리오 파일 업로드
**Actor**: 구직자(JOB_SEEKER)
**Goal**: PDF, 이미지 파일을 업로드하여 자동으로 정보 추출

**Main Flow**:
1. 파일 업로드 섹션 접근
2. 지원 파일 형식 확인 (PDF, JPG, PNG, DOCX)
3. 파일 선택 및 업로드 (최대 10MB)
4. 파일 형식별 처리
   - **PDF**: 텍스트 추출 후 OCR 보완
   - **이미지**: OCR을 통한 텍스트 추출
   - **DOCX**: 텍스트 직접 추출
5. 추출된 텍스트 분석 및 파싱
   - 개인정보 패턴 인식
   - 학력정보 패턴 인식
   - 경력정보 패턴 인식
   - 기술스택 키워드 추출
6. 자동 입력 제안 목록 생성
7. 사용자 승인 후 해당 섹션에 자동 입력

**Post-condition**:
- 수동 입력 시간 단축
- 정보 입력 정확도 향상

**Exception Flow**:
- E1: 파일 크기 초과 → "10MB 이하 파일만 업로드 가능합니다"
- E2: 지원하지 않는 형식 → "지원하지 않는 파일 형식입니다"
- E3: OCR 처리 실패 → "텍스트 추출에 실패했습니다. 수동으로 입력해주세요"

### 7.2 이력서 템플릿 생성
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 입력된 포트폴리오 정보를 바탕으로 이력서 자동 생성

**Main Flow**:
1. 이력서 생성 기능 선택
2. 이력서 템플릿 선택
   - 전통적 양식, 모던 디자인, 창의적 양식
3. 포트폴리오 데이터 자동 매핑
4. 미리보기 제공
5. 필요 시 내용 수정
6. PDF 형태로 이력서 생성 및 다운로드

**Post-condition**:
- 표준화된 이력서 확보
- 즉시 지원 가능한 상태

## 8. 포트폴리오 공유 및 공개 설정 Use Case

### 8.1 포트폴리오 공개 범위 설정
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 포트폴리오 정보의 공개 수준 조절

**Main Flow**:
1. 포트폴리오 공개 설정 메뉴 접근
2. 섹션별 공개 범위 설정
   - **전체 공개**: 모든 채용담당자 열람 가능
   - **인증 기업만**: 사업자등록 인증된 기업만
   - **비공개**: 검색 결과에 노출되지 않음
3. 개인정보 보호 수준 설정
   - 연락처 정보 노출 수준
   - 주소 정보 상세도 (시/도 only vs 구/군까지)
   - 학교명 전체 공개 vs 일부 마스킹
4. 채용담당자 연락 허용 여부
5. 설정 저장 및 즉시 적용

**Post-condition**:
- 프라이버시가 보호된 상태로 구직활동 가능
- 의도하지 않은 정보 노출 방지

### 8.2 포트폴리오 URL 공유
**Actor**: 구직자(JOB_SEEKER)
**Goal**: 외부에 포트폴리오 URL 공유

**Main Flow**:
1. 포트폴리오 공유 버튼 클릭
2. 공유용 고유 URL 생성
3. 공유 옵션 선택
   - 공개 링크 (누구나 열람 가능)
   - 비밀번호 보호 링크
   - 유효기간 설정 (1일, 1주일, 1개월)
4. URL 복사 또는 QR코드 생성
5. 공유 이력 관리 (누가, 언제 접근했는지)

**Post-condition**:
- 면접 시 포트폴리오 즉시 공유 가능
- 접근 이력 추적 가능

---

## 9. Use Case 시각화 (ASCII Diagrams)

### 9.1 MongoDB 하이브리드 포트폴리오 생성 플로우차트

```
                    ┌─────────────────────┐
                    │    구직자 로그인       │
                    │   (JOB_SEEKER)      │
                    └──────────┬──────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │  포트폴리오 관리       │
                    │     페이지 접근        │
                    └──────────┬──────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │   기본 정보 입력       │
                    │ ┌─────────────────┐ │
                    │ │ • 포트폴리오 제목  │ │
                    │ │ • 자기소개 요약   │ │
                    │ │ • 공개 설정      │ │
                    │ │ • 완성도 상태    │ │
                    │ └─────────────────┘ │
                    └──────────┬──────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │     섹션별 정보       │
                    │     단계적 입력       │
                    └──────────┬──────────┘
                               │
              ┌────────────────┼────────────────┐
              │                │                │
              ▼                ▼                ▼
    ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐
    │   개인정보         │ │    학력정보       │ │    경력정보       │
    │                 │ │                 │ │                 │
    │ • 생년월일         │ │ • 학교명          │ │ • 회사명          │
    │ • 성별            │ │ • 전공           │ │ • 담당업무        │
    │ • 주소            │ │ • 졸업상태        │ │ • 기술스택        │
    │ • 연락처          │ │ • 성적           │ │ • 성과           │
    └─────────────────┘ └─────────────────┘ └─────────────────┘
              │                │                │
              └────────────────┼────────────────┘
                               │
                               ▼
              ┌────────────────┼────────────────┐
              │                │                │
              ▼                ▼                ▼
    ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐
    │   기술스택         │ │    자격증         │ │   프로젝트        │
    │                 │ │                 │ │                 │
    │ • 프로그래밍 언어   │ │ • 자격증명        │ │ • 프로젝트 제목    │
    │ • 프레임워크       │ │ • 취득일          │ │ • 프로젝트 설명    │
    │ • 데이터베이스      │ │ • 유효기간        │ │ • GitHub URL     │
    │ • 숙련도          │ │ • 점수/등급       │ │ • 기술스택        │
    └─────────────────┘ └─────────────────┘ └─────────────────┘
              │                │                │
              └────────────────┼────────────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │    RAG 시스템         │
                    │   벡터화 및 저장       │
                    │                     │
                    │ • 키워드 추출         │
                    │ • 임베딩 생성         │
                    │ • Vector DB 저장    │
                    └─────────────────────┘
```

### 9.2 OCR 파일 처리 플로우차트

```
                    ┌─────────────────────┐
                    │   파일 업로드 요청      │
                    │                     │
                    │ 지원형식: PDF, JPG,  │
                    │ PNG, DOCX (≤10MB)  │
                    └──────────┬──────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │    파일 형식 검증      │
                    └──────────┬──────────┘
                               │
                ┌──────────────┴──────────────┐
                │                             │
                ▼                             ▼
    ┌─────────────────────┐         ┌─────────────────────┐
    │      검증 통과         │         │     검증 실패         │
    │                     │         │                     │
    │ • 파일 임시 저장       │         │ • 오류 메시지 반환     │
    │ • 처리 큐 등록        │         │ • 업로드 취소         │
    └──────────┬──────────┘         └─────────────────────┘
               │
               ▼
    ┌─────────────────────┐
    │   파일 형식별 처리     │
    └──────────┬──────────┘
               │
    ┌──────────┼──────────┬──────────┐
    │          │          │          │
    ▼          ▼          ▼          ▼
┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐
│  PDF    │ │  JPG    │ │  PNG    │ │  DOCX   │
│처리      │ │OCR 처리  │ │OCR 처리  │ │텍스트     │
│         │ │         │ │         │ │추출      │
└────┬────┘ └────┬────┘ └────┬────┘ └────┬────┘
     │          │          │          │
     └──────────┼──────────┼──────────┘
                │          │
                ▼          ▼
     ┌─────────────────────────────┐
     │        텍스트 분석 및 파싱      │
     │                             │
     │ 1. 정규식 패턴 매칭             │
     │ 2. NLP 기반 정보 추출          │
     │ 3. 키워드 분류                 │
     └─────────────┬───────────────┘
                   │
                   ▼
     ┌─────────────────────────────┐
     │      자동 입력 제안 생성        │
     │                             │
     │ ┌─────────────────────────┐ │
     │ │ 개인정보  │ 학력  │ 경력    │ │
     │ ├─────────────────────────┤ │
     │ │ 기술스택  │ 자격증│ 기타     │ │
     │ └─────────────────────────┘ │
     └─────────────┬───────────────┘
                   │
                   ▼
     ┌─────────────────────────────┐
     │       사용자 검토 및 승인       │
     │                             │
     │ • 추출된 정보 미리보기           │
     │ • 정확성 확인                  │
     │ • 승인/수정/거부 선택            │
     └─────────────┬───────────────┘
                   │
         ┌─────────┴─────────┐
         │                   │
         ▼                   ▼
┌─────────────────┐   ┌─────────────────┐
│     승인         │   │   수정/거부       │
│                 │   │                 │
│ • 포트폴리오       │   │ • 수동 입력       │
│   자동 입력        │   │ • 정보 폐기       │
└─────────────────┘   └─────────────────┘
```

### 9.3 기술스택 관리 시스템 다이어그램

```
    ┌─────────────────────────────────────────────────────────┐
    │                 기술스택 관리 시스템                        │
    └─────────────────────────────────────────────────────────┘

    구직자 입력                기술스택 DB              채용담당자 검색
        │                          │                          │
        ▼                          ▼                          ▼
    ┌─────────────┐        ┌─────────────────┐       ┌─────────────────┐
    │ 기술 추가     │        │   기술 마스터     │       │ 기술 기반 검색    │
    │            │ ────►  │     데이터베이스    │ ◄──── │                │
    │• 프로그래밍  │        │                 │       │• Java 개발자     │
    │  언어       │        │• Java           │       │• Spring 경험자   │
    │• 프레임워크  │        │• Python         │       │• React 가능자    │
    │• 데이터베이스 │        │• JavaScript     │       │• AWS 운영 경험   │
    │• 도구/기타   │        │• Spring         │       └─────────────────┘
    └─────────────┘        │• React          │              │
          │                │• PostgreSQL     │              │
          │                │• Docker         │              │
          ▼                │• AWS            │              ▼
    ┌─────────────┐        └─────────────────┘       ┌─────────────────┐
    │ 숙련도 설정   │                │                │   검색 결과       │
    │            │                ▼                │                 │
    │• BEGINNER   │        ┌─────────────────┐       │• 매칭 점수       │
    │• INTERMEDIATE│        │  기술별 통계     │       │• 숙련도 필터     │
    │• ADVANCED   │        │                 │       │• 경험 연수       │
    │• EXPERT     │        │• 사용자 수       │       │• 관련 프로젝트   │
    └─────────────┘        │• 평균 숙련도     │       └─────────────────┘
          │                │• 수요 동향       │
          │                └─────────────────┘
          ▼                         │
    ┌─────────────┐                 │
    │ 경험 연계    │                 │
    │            │ ◄───────────────┘
    │• 프로젝트    │
    │  연동       │
    │• 경력 연동   │
    │• 자격증     │
    │  연동       │
    └─────────────┘
```

### 9.4 MongoDB 하이브리드 데이터베이스 아키텍처

```
    ┌─────────────────────────────────────────────────────────┐
    │               포트폴리오 데이터 모델 ERD                     │
    └─────────────────────────────────────────────────────────┘

                           ┌─────────────┐
                           │    User     │
                           │             │
                           │ • user_id   │
                           │ • email     │
                           │ • role      │
                           │ • status    │
                           └──────┬──────┘
                                  │ 1:1
                                  │
                    ┌─────────────────────┐
                    │     Portfolio       │
                    │                     │
                    │ • portfolio_id      │
                    │ • user_id (FK)      │
                    │ • title             │
                    │ • summary           │
                    │ • is_public         │
                    │ • completion_status │
                    └──────────┬──────────┘
                               │ 1:1
              ┌────────────────┼────────────────┐
              │                │                │
              ▼                ▼                ▼
    ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐
    │  PersonalInfo   │ │   DesiredJob    │ │  PortfolioUrl   │
    │                 │ │                 │ │                 │
    │ • personal_id   │ │ • desired_id    │ │ • url_id        │
    │ • portfolio_id  │ │ • portfolio_id  │ │ • portfolio_id  │
    │ • birth_date    │ │ • job_type      │ │ • url_type      │
    │ • gender        │ │ • work_region   │ │ • url_address   │
    │ • address       │ │ • salary_range  │ │ • description   │
    │ • phone         │ │ • employment_type│ └─────────────────┘
    └─────────────────┘ └─────────────────┘         │ 1:N
              │ 1:1               │ 1:1             │
              │                   │                 │
              ▼                   ▼                 ▼
         Portfolio ◄──────────────┼─────────────────┘
              │                   │
              │ 1:N               │ 1:N
              │                   │
    ┌─────────┼───────────────────┼─────────────┐
    │         │                   │             │
    ▼         ▼                   ▼             ▼
┌──────────┐ ┌──────────────┐ ┌─────────┐ ┌────────────┐
│Education │ │  Experience  │ │TechStack│ │Certification│
│          │ │              │ │         │ │            │
│•edu_id   │ │•exp_id       │ │•tech_id │ │•cert_id    │
│•school   │ │•company      │ │•tech_name│ │•cert_name  │
│•major    │ │•position     │ │•category │ │•issue_date │
│•gpa      │ │•description  │ │•level    │ │•valid_until│
│•status   │ │•start_date   │ │•experience│ │•score     │
└──────────┘ │•end_date     │ └─────────┘ └────────────┘
             │•tech_stack   │
             └──────────────┘
                    │ N:M
                    │
              ┌─────────────┐
              │ExperienceTech│
              │             │
              │•exp_id (FK) │
              │•tech_id (FK)│
              └─────────────┘
```

### 9.5 MongoDB Vector Search 기반 RAG 시스템 플로우

```
    ┌─────────────────────────────────────────────────────────┐
    │            RAG 시스템 포트폴리오 벡터화 플로우                  │
    └─────────────────────────────────────────────────────────┘

    구직자 포트폴리오           전처리 단계              벡터화 단계
         입력                                           
         │                     │                       │
         ▼                     ▼                       ▼
    ┌──────────────┐    ┌─────────────────┐    ┌─────────────────┐
    │ 포트폴리오     │    │   텍스트 추출     │    │   임베딩 생성     │
    │ 종합 데이터    │────│   및 정제        │────│                 │
    │              │    │                 │    │ • 개인정보 벡터   │
    │• 개인정보     │    │• HTML 태그 제거   │    │ • 학력 벡터      │
    │• 학력        │    │• 특수문자 처리    │    │ • 경력 벡터      │
    │• 경력        │    │• 키워드 추출      │    │ • 기술스택 벡터   │
    │• 기술스택     │    │• 불용어 제거      │    │ • 종합 벡터      │
    │• 자격증      │    └─────────────────┘    └─────────────────┘
    │• 희망조건     │           │                       │
    └──────────────┘           │                       │
         │                     ▼                       ▼
         │            ┌─────────────────┐        ┌─────────────────┐
         │            │  키워드 가중치    │        │   Vector DB     │
         │            │      설정       │        │     저장        │
         │            │                 │        │                 │
         │            │• 기술스택: 0.4   │        │• ChromaDB       │
         │            │• 경력: 0.3       │        │• Pinecone       │
         │            │• 학력: 0.2       │        │• 메타데이터     │
         │            │• 자격증: 0.1     │        │• 검색 인덱스     │
         │            └─────────────────┘        └─────────────────┘
         │                     │                       │
         └─────────────────────┼───────────────────────┘
                               │
                               ▼
                    ┌─────────────────────┐
                    │   채용담당자 검색       │
                    │      시스템           │
                    │                     │
                    │ 1. 자연어 쿼리 입력     │
                    │ 2. 쿼리 벡터화         │
                    │ 3. 유사도 계산         │
                    │ 4. 매칭 결과 반환      │
                    └─────────────────────┘
```

### 9.6 포트폴리오 완성도 및 검증 시스템

```
    ┌─────────────────────────────────────────────────────────┐
    │             포트폴리오 완성도 평가 시스템                   │
    └─────────────────────────────────────────────────────────┘

                        ┌─────────────────┐
                        │ 포트폴리오 검증     │
                        │   시작 트리거      │
                        │                 │
                        │• 저장 시         │
                        │• 공개 전         │
                        │• 수동 검증 요청    │
                        └────────┬────────┘
                                │
                                ▼
    ┌─────────────────────────────────────────────────────────┐
    │                  섹션별 완성도 검증                       │
    └─────────────────────────────────────────────────────────┘
                                │
        ┌───────┬───────┬───────┼───────┬───────┬───────┐
        │       │       │       │       │       │       │
        ▼       ▼       ▼       ▼       ▼       ▼       ▼
    ┌───────┐┌───────┐┌───────┐┌───────┐┌───────┐┌───────┐┌───────┐
    │개인정보 ││ 학력   ││ 경력    ││기술스택 ││자격증  ││희망조건  ││ URL  │
    │       ││       ││       ││       ││       ││       ││      │
    │필수:   ││필수:   ││선택:   ││필수:   ││선택:   ││필수:   ││선택:  │
    │•이름   ││•학교명 ││•경험   ││•3개이상││•관련   ││•직무    ││•깃허브│
    │•연락처 ││•전공   ││•프로젝트││•숙련도 ││•기술   ││•지역     ││•포폴  │
    │•주소   ││•상태   ││       ││       ││       ││•연봉   ││      │
    └───┬───┘└───┬───┘└───┬───┘└───┬───┘└───┬───┘└───┬───┘└───┬───┘
        │        │        │        │        │        │        │
        └────────┼────────┼────────┼────────┼────────┼────────┘
                 │        │        │        │        │
                 ▼        ▼        ▼        ▼        ▼
    ┌─────────────────────────────────────────────────────────┐
    │                완성도 점수 계산                             │
    │                                                         │
    │ 기본 정보 (30점)  │ 필수: 개인정보, 학력, 기술스택                │
    │ 경력 정보 (25점)  │ 가산: 인턴십, 프로젝트, 아르바이트            │
    │ 기술 상세 (20점)  │ 가산: 숙련도, 사용기간, 프로젝트 연계         │
    │ 자격증 (15점)     │ 가산: IT 자격증, 어학, 기타                │
    │ 포트폴리오 (10점) │ 가산: GitHub, 개인 사이트, 블로그           │
    └─────────────────────────────────────────────────────────┘
                                │
                                ▼
                    ┌───────────────────────┐
                    │     완성도 등급          │
                    │                       │
                    │ 🥇 EXCELLENT (90-100) │
                    │ 🥈 GOOD (70-89)       │
                    │ 🥉 FAIR (50-69)       │
                    │ 📝 INCOMPLETE (0-49)  │
                    └───────────────────────┘
                                │
                                ▼
                    ┌───────────────────────┐
                    │   개선 제안 생성       │
                    │                       │
                    │ • 부족한 섹션 안내     │
                    │ • 우선순위 제안        │
                    │ • 예시 템플릿 제공     │
                    │ • 자동 완성 기능       │
                    └───────────────────────┘
```

## 10. 데이터 보안 및 프라이버시

### 10.1 개인정보 보호 정책
- **데이터 암호화**: 민감 정보 AES-256 암호화 저장
- **접근 권한**: 역할 기반 접근 제어로 무단 접근 차단
- **데이터 익명화**: 채용담당자에게는 성씨만 공개, 상세 주소 마스킹
- **로그 관리**: 모든 접근 및 수정 기록 보관

### 10.2 GDPR/개인정보보호법 준수
- **동의 관리**: 정보 수집 및 활용에 대한 명시적 동의
- **삭제 권리**: 사용자 요청 시 개인정보 완전 삭제
- **정정 권리**: 잘못된 정보 수정 권한 보장
- **이동 권리**: 포트폴리오 데이터 내보내기 기능

### 10.3 보안 위협 대응
- **SQL Injection**: 파라미터화된 쿼리 사용
- **XSS 방지**: 입력값 검증 및 출력 인코딩
- **CSRF 방지**: CSRF 토큰 및 SameSite 쿠키
- **파일 업로드**: 바이러스 검사 및 확장자 검증

---

## 11. 시스템 성능 및 확장성

### 11.1 캐싱 전략
- **Redis 활용**: 자주 조회되는 포트폴리오 데이터 캐싱
- **CDN 연동**: 이미지 및 정적 파일 배포 최적화
- **쿼리 최적화**: 데이터베이스 인덱스 및 쿼리 튜닝

### 11.2 확장성 고려사항
- **마이크로서비스**: 포트폴리오 서비스 독립적 구성
- **비동기 처리**: OCR 및 벡터화 작업 큐 시스템 활용
- **로드 밸런싱**: 트래픽 분산 처리
- **모니터링**: APM을 통한 성능 지표 추적

이상으로 Experfolio 프로젝트의 Phase 3.1 포트폴리오 데이터 모델링 Use Case 명세서를 작성했습니다.