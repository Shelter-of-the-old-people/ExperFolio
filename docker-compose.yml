version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: experfolio-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-experfolio}
      POSTGRES_USER: ${DB_USERNAME:-experfolio_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-experfolio_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - experfolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-experfolio_user} -d ${DB_NAME:-experfolio}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: experfolio-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - experfolio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # Vector Database (ChromaDB)
  chromadb:
    image: chromadb/chroma:latest
    container_name: experfolio-chromadb
    restart: unless-stopped
    ports:
      - "${VECTOR_DB_PORT:-8000}:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - experfolio-network
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: experfolio-app
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-experfolio}
      - DB_USERNAME=${DB_USERNAME:-experfolio_user}
      - DB_PASSWORD=${DB_PASSWORD:-experfolio_password}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      
      # JWT
      - JWT_SECRET=${JWT_SECRET:-your-256-bit-secret-key-here-change-in-production}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      
      # AI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:-}
      
      # Vector Database
      - VECTOR_DB_URL=http://chromadb:8000
      - VECTOR_DB_COLLECTION_NAME=${VECTOR_DB_COLLECTION_NAME:-experfolio_profiles}
      
      # File Upload
      - FILE_UPLOAD_MAX_SIZE=${FILE_UPLOAD_MAX_SIZE:-10MB}
      - FILE_UPLOAD_PATH=/app/uploads
      
      # OCR
      - TESSERACT_DATA_PATH=/usr/share/tesseract-ocr/5/tessdata/
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=/app/logs/application.log
      
      # CORS
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}
    
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    
    networks:
      - experfolio-network
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: experfolio-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - experfolio-network
    depends_on:
      - app
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chromadb_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  experfolio-network:
    driver: bridge